{"version":3,"sources":["components/Cart/Checkout.module.scss","components/Cart/Cart.module.scss","components/Cart/DropdownCart.module.scss","components/Layout/HeaderCartButton.module.scss","components/Layout/Header.module.scss","components/Cart/CartItem.module.scss","components/Layout/Navigation.module.scss","components/Meals/MealItem/MealItem.module.scss","components/Meals/MealsAvailability.module.scss","components/UI_General/Modal.module.scss","components/UI_General/Card.module.css","components/Meals/MealsDescription.module.scss","components/Layout/Navigation.js","components/Cart/CartIcon.js","components/UI_General/Card.js","cart-context/cart-context.js","components/Cart/DropdownCart.js","components/Layout/HeaderCartButton.js","components/assets/meal-table.jpg","components/Layout/Header.js","components/Meals/MealsDescription.js","components/UI_General/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","hooks/fetch-hook.js","components/Meals/MealsAvailability.js","components/Meals/Meals.js","components/UI_General/Modal.js","components/Cart/CartItem.js","hooks/input-hook.js","components/Cart/Checkout.js","components/Cart/Cart.js","App.js","index.js"],"names":["module","exports","Navigation","console","log","className","classes","navbar__links","href","navbar__link","React","memo","CartIcon","xmlns","viewBox","fill","d","Card","props","card","children","CartContext","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","defaultValues","reducerFn","state","action","type","updatedItems","existingCartItemIndex","findIndex","payload","existingItem","updatedItem","amount","price","updatedList","removedItem","find","filter","savedList","savedAmount","reduce","total","CartContextProvider","useReducer","cartState","dispatchCartAction","cartContext","useEffect","cartValue","localStorage","getItem","parsedCartValue","JSON","parse","savedCart","stringify","setItem","length","Provider","value","DropdownCartItem","name","toFixed","HoverCart","cartCtx","useContext","cartItems","map","totalItems","CartButton","useState","activateBumpEffect","setActiveBumpEffect","showHoverCart","setShowHoverCart","btnClasses","button","bump","timerID","setTimeout","clearTimeout","onClick","onMouseEnter","onMouseLeave","DropdownCart","Header","header","navbar","logo","logo__E","HeaderCartButton","onShowCart","src","mealsImage","alt","MealsDescription","description","Input","forwardRef","ref","htmlFor","inputs","label","inputType","options","option","defaultProps","MealForm","amountIsValid","setAmountIsValid","inputRef","useRef","onSubmit","event","preventDefault","enteredAmount","current","enteredAmountNumber","trim","onAddAmount","defaultValue","min","max","step","MealItem","meal","priceF","useHttp","isLoading","setIsLoading","error","setError","sendRequest","useCallback","configRequest","shapeData","a","fetch","url","method","headers","body","response","ok","Error","json","data","message","MealsAvailability","fetchedMeals","setFetchedMeals","fetchMeals","loadedMeals","key","push","loading","meals","Meals","Backdrop","backdrop","ModalOverlay","modal","content","Modal","cartModal","document","getElementById","ReactDOM","createPortal","CartItem","fixedPrice","summary","actions","onRemove","onAdd","initialState","isTouched","reducerFN","useInput","validateInput","inputState","dispatch","isValid","hasError","inputChangeHandler","target","inputBlurHandler","isNotEmpty","isFiveChars","Checkout","nameIsValid","nameHasError","nameInputChangeHandler","nameInputBlurHandler","street","streetIsValid","streetHasError","streetInputChangeHandler","streetInputBlurHandler","postalCode","postalCodeIsValid","postalCodeHasError","postalCodeInputChangeHandler","postalCodeInputBlurHandler","city","cityIsValid","cityHasError","cityInputChangeHandler","cityInputBlurHandler","formIsValid","nameClasses","control","invalid","streetClasses","postalClasses","cityClasses","userOrderDetails","sentData","form","controls","onChange","onBlur","onCloseCart","disabled","Cart","isCheckout","setIsCheckout","didSubmit","setDidSubmit","isSubmiting","sendError","sendOrder","onAddItemHandler","onRemoveItemHandler","SubmitOrderHandler","user","orderedItems","totalPrice","bind","showOrder","actionButtons","onHideCart","modalContent","sending","App","cartIsShown","setCartIsShown","render"],"mappings":"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","file":"static/js/main.8ff333d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__2zpc7\",\"controls\":\"Checkout_controls__3Iq8V\",\"control\":\"Checkout_control__2IKRQ\",\"actions\":\"Checkout_actions__24JBI\",\"invalid\":\"Checkout_invalid__1ltQw\",\"modal-slide\":\"Checkout_modal-slide__UwXXe\",\"bump\":\"Checkout_bump__3aD7y\",\"meals-appear\":\"Checkout_meals-appear__2pT1i\",\"hover-cart\":\"Checkout_hover-cart__2cpha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__3cXup\",\"total\":\"Cart_total___Eacn\",\"actions\":\"Cart_actions__1dKn_\",\"button\":\"Cart_button__39cMZ\",\"button__alt\":\"Cart_button__alt__3jpJJ\",\"sending\":\"Cart_sending__NdJDW\",\"error\":\"Cart_error__lHMVc\",\"modal-slide\":\"Cart_modal-slide__3jpzk\",\"bump\":\"Cart_bump__YbbHL\",\"meals-appear\":\"Cart_meals-appear__x-PGF\",\"hover-cart\":\"Cart_hover-cart__12MtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown-cart\":\"DropdownCart_dropdown-cart__3KZfO\",\"hover-cart\":\"DropdownCart_hover-cart__2EomG\",\"dropdown-cart__item\":\"DropdownCart_dropdown-cart__item__2KktB\",\"dropdown-cart__total\":\"DropdownCart_dropdown-cart__total__2IqjJ\",\"dropdown-cart__item__name\":\"DropdownCart_dropdown-cart__item__name__2YIPV\",\"dropdown-cart__item__amount\":\"DropdownCart_dropdown-cart__item__amount__3-2aU\",\"modal-slide\":\"DropdownCart_modal-slide__2LURA\",\"bump\":\"DropdownCart_bump__34_-9\",\"meals-appear\":\"DropdownCart_meals-appear__2Ixk4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__2Jdgn\",\"cart-icon\":\"HeaderCartButton_cart-icon__1FG5B\",\"cart-text\":\"HeaderCartButton_cart-text__2L2B3\",\"cart-badge\":\"HeaderCartButton_cart-badge__2Gvh7\",\"bump\":\"HeaderCartButton_bump__-vdhp\",\"modal-slide\":\"HeaderCartButton_modal-slide__3CcEd\",\"meals-appear\":\"HeaderCartButton_meals-appear__N7viD\",\"hover-cart\":\"HeaderCartButton_hover-cart__3Ko7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-image\":\"Header_header-image__11hbW\",\"navbar\":\"Header_navbar__1pgS1\",\"logo\":\"Header_logo__2Ngxg\",\"logo__E\":\"Header_logo__E__377pc\",\"modal-slide\":\"Header_modal-slide__2M4Ks\",\"bump\":\"Header_bump__Mdk0O\",\"meals-appear\":\"Header_meals-appear__2Ow5X\",\"hover-cart\":\"Header_hover-cart__1xlXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__3oRAf\",\"price\":\"CartItem_price__20wU3\",\"amount\":\"CartItem_amount__28XCT\",\"summary\":\"CartItem_summary__2V8_F\",\"actions\":\"CartItem_actions__3jhR-\",\"modal-slide\":\"CartItem_modal-slide__1DRny\",\"bump\":\"CartItem_bump__CsSh3\",\"meals-appear\":\"CartItem_meals-appear__1_RVk\",\"hover-cart\":\"CartItem_hover-cart__3ZYj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar__links\":\"Navigation_navbar__links__nRIJZ\",\"navbar__link\":\"Navigation_navbar__link__gqFzN\",\"modal-slide\":\"Navigation_modal-slide__1YKNa\",\"bump\":\"Navigation_bump__dwj-A\",\"meals-appear\":\"Navigation_meals-appear__3tUXq\",\"hover-cart\":\"Navigation_hover-cart__3wyGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__2fxVv\",\"meal-description\":\"MealItem_meal-description__3HytL\",\"meal-price\":\"MealItem_meal-price__2To3n\",\"modal-slide\":\"MealItem_modal-slide__1mb0W\",\"bump\":\"MealItem_bump__3s8XO\",\"meals-appear\":\"MealItem_meals-appear__2L38l\",\"hover-cart\":\"MealItem_hover-cart__2Ysg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"MealsAvailability_meals__86qSA\",\"meals-appear\":\"MealsAvailability_meals-appear__1mAde\",\"loading\":\"MealsAvailability_loading__NgpqJ\",\"error\":\"MealsAvailability_error__3MaEn\",\"modal-slide\":\"MealsAvailability_modal-slide__p5Wq3\",\"bump\":\"MealsAvailability_bump__1GDj6\",\"hover-cart\":\"MealsAvailability_hover-cart__2-27j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3L48e\",\"modal\":\"Modal_modal__1n1Sq\",\"modal-slide\":\"Modal_modal-slide__2_jD0\",\"bump\":\"Modal_bump__3dGNx\",\"meals-appear\":\"Modal_meals-appear__13Zbf\",\"hover-cart\":\"Modal_hover-cart__2KJaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__boiBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"MealsDescription_description__2vbmT\",\"modal-slide\":\"MealsDescription_modal-slide__Alo5C\",\"bump\":\"MealsDescription_bump__30jul\",\"meals-appear\":\"MealsDescription_meals-appear__3DCa8\",\"hover-cart\":\"MealsDescription_hover-cart__fWIeC\"};","import classes from \"./Navigation.module.scss\";\r\nimport React from \"react\";\r\n\r\nconst Navigation = () => {\r\n  console.log(\"In Navigation\");\r\n\r\n  return (\r\n    <ul className={classes.navbar__links}>\r\n      <li>\r\n        <a href=\"!#\" className={classes.navbar__link}>\r\n          TEST\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"!#\" className={classes.navbar__link}>\r\n          NOT\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"!#\" className={classes.navbar__link}>\r\n          HING\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(Navigation);\r\n","const CartIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n  </svg>\r\n);\r\n\r\nexport default CartIcon;\r\n","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => (\r\n  <div className={`${classes.card} ${props.className ? props.className : \"\"}`}>\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\n// Voi folosi acest context pt a implementa logica ce-mi permite sa adaug si sa inlatur elemente din cosul\r\n// de cumparaturi 🢣 voi avea un un obiect cu articolele create(o functie ce-mi va adauga in items obiecte cu datele preluate din MealItem -un nou obiect ce va contine ceva date din obiectul cu mancare + amount)\r\n//                🢣 un cost total\r\n\r\n//Puteam imparti aceasta logica in doua 🢣 un fisier in care sa am crearea contextului\r\n//                                      🢣 un fisier in care sa am componenta provider\r\nconst CartContext = React.createContext({\r\n  items: [],\r\n  totalAmount: 0,\r\n  addItem: (item) => {},\r\n  removeItem: (id) => {},\r\n  clearCart: () => {},\r\n});\r\n\r\n// 🢣 valorile implicite ale proprietatilor starii din reduce\r\nconst defaultValues = { items: [], totalAmount: 0 };\r\n\r\nconst reducerFn = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      //caut elementul si preiau indexul acestuia pt mai tarziu\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      //extrag elementul 🢣 chiar daca este prelua asa nu-l modific direct\r\n      const existingItem = state.items[existingCartItemIndex]; // referinta este catre acel loc in memorie(⇨ muabil)\r\n      let updatedItems;\r\n\r\n      if (existingItem) {\r\n        // daca nu exista ⇨ undefined\r\n        //creez un nou obiect in care am aceleasi date, dar se schimba 'amount'\r\n        const updatedItem = {\r\n          ...existingItem,\r\n          amount: existingItem.amount + action.payload.amount,\r\n        };\r\n        //creez o noua lista cu obiectele existente si inlocuiesc articolul existent cautat\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems = [...state.items, action.payload];\r\n        // updatedItems = state.items.concat(action.payload); //🢣 varianta cu acelasi rezultat ca mai sus\r\n      }\r\n\r\n      const updatedAmount =\r\n        state.totalAmount + action.payload.price * action.payload.amount;\r\n\r\n      return { items: updatedItems, totalAmount: updatedAmount };\r\n\r\n    case \"REMOVE\":\r\n      // vad doua abordari:\r\n      //       1 🢣 creez o copie a listei si o modific direct 🢣 .find + prelucrarea articolului direct 🢣🢣🢣 returnez in starea listei noua lista\r\n      //       2 🢣 creez o copie a articolului 🢣 .findIndex(pt ca am nevoie sa si inlocuiesc articolul de la aceasta pozitie) + il prelucrez/modific +\r\n      //            creez o copie a listei in care voi inlocui articolul de pe acel index 🢣🢣🢣 returnez in stare listei noua lista\r\n      // metoda 2 am folosit-o pt adaugare 🢣 ambele sunt abordari de tip imuabil 🢣 o voi aplica pe prima aici.\r\n\r\n      //copiez lista\r\n      let updatedList = [...state.items]; // sau 🢣 state.items.concat() 🢣 state.items.slice()\r\n      //preiau articolul (find imi intoarce valoarea obiectului cautat, adica obiectul) pt a lucra direct pe el\r\n      const removedItem = updatedList.find(\r\n        (item) => item.id === action.payload\r\n      ); // orice modificare asupra lui se va raspandi in locu de unde este copiat 🢣 varianta: crearea unui nou obiect {...foundItem}\r\n      //       ⇧ CHIAR SI ASA ⇧ cand inlocuim lista o facem cu alta adresa din memorie a copiei listei\r\n      removedItem.amount -= 1;\r\n\r\n      if (removedItem.amount === 0) {\r\n        updatedList = updatedList.filter((item) => item.id !== action.payload);\r\n      }\r\n      // ************************************************************* abordarea 2\r\n      // preiau indexul articolului\r\n      //   const removedItemIndex = state.items.findIndex(\r\n      //     (item) => item.id === action.payload\r\n      //   );\r\n      //   //preiau elementul cautat\r\n      //   const removedItem = state.items[removedItemIndex];\r\n      //   //creez o noua copie a obiectului cu articolul in care modific cantitatea acestuia\r\n      //   const updatedItem = { ...removedItem, amount: removedItem.amount - 1 }; // 🢣 date imuabile\r\n\r\n      //   //copiez lista si o actualizez inlocuind obiectul articolului cu noul obiect modificat\r\n      //   let updatedList = [...state.items];\r\n      //   updatedList[removedItemIndex] = updatedItem;\r\n\r\n      //   //daca cantitatea = 0 atunci filtrez lista si voi avea o noua lista fara obiectul articolului inlaturat\r\n      //   if (updatedItem.amount === 0) {\r\n      //     updatedList = state.items.filter((item) => item.id !== action.payload);\r\n      //     //              ⇧ ori pe state.items ori pe updatedList este acelasi lucru\r\n      //   }\r\n      // *************************************************************\r\n\r\n      const updatedAmount1 = state.totalAmount - removedItem.price; //pt ca scad cate un articol\r\n\r\n      return { items: updatedList, totalAmount: updatedAmount1 };\r\n\r\n    case \"SAVED_CART\":\r\n      const savedList = action.payload;\r\n      //calculez suma totala\r\n      const savedAmount = savedList.reduce(\r\n        (total, item) => (total += item.amount * item.price),\r\n        0\r\n      );\r\n      // reintorc noua stare din reducer\r\n      return { items: savedList, totalAmount: savedAmount };\r\n\r\n    case \"CLEAR\":\r\n      return defaultValues;\r\n\r\n    default:\r\n      return defaultValues;\r\n  }\r\n};\r\n\r\n// Componenta ce va infasura componentele in care voi folosi contextul\r\nexport const CartContextProvider = (props) => {\r\n  // 🢣 folosesc reducer pt a retine starea\r\n  const [cartState, dispatchCartAction] = useReducer(reducerFn, defaultValues);\r\n\r\n  //functia ce-mi trimite o comanda de a adauga un articol in lista 🢣 logica este in reducer\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", payload: item }); // sau: ,item: item\r\n  };\r\n  //functia ce-mi trimite comanda de a inlatura un articol din lista 🢣 logica este in reducer\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", payload: id }); // sau: ,id: id\r\n  };\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  };\r\n\r\n  //🢣 declarat separat, contine tot ceea ce voi trimite in context pt a fi accesat din alte componente\r\n  const cartContext = {\r\n    // valorile vor fi adaugate dinamic\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n\r\n  //**************************************************************** Salvarea starii cosului de cumparaturi */\r\n\r\n  // 🢣 rolul de a prelua datele din localStorage si de a actualiza cosul cu ele\r\n  //    🢣 la reincarcarea paginii\r\n  useEffect(() => {\r\n    //preiau valoarea\r\n    const cartValue = localStorage.getItem(\"cart\");\r\n\r\n    //daca am salvata lista de cumparaturi(daca nu este salvata inseamna ca lista este goala)\r\n    if (cartValue) {\r\n      // o parsez/transform inapoi in vector\r\n      const parsedCartValue = JSON.parse(cartValue);\r\n      // o trimit in Reducer pt a fi pusa in variabila de stare a listei cu articole\r\n      dispatchCartAction({ type: \"SAVED_CART\", payload: parsedCartValue });\r\n    }\r\n  }, []);\r\n\r\n  // 🢣 rolul de a adauga lista cu articole in memoria locala\r\n  useEffect(() => {\r\n    //transform vectorul in elem de tip Json\r\n    const savedCart = JSON.stringify(cartState.items);\r\n    localStorage.setItem(\"cart\", savedCart);\r\n    //daca lista este goala atunci inlatur salvarea\r\n    if (cartState.items.length === 0) {\r\n      localStorage.removeItem(\"cart\");\r\n    }\r\n  }, [cartState.items]);\r\n  //**************************************************************** */\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContext;\r\n","import classes from \"./DropdownCart.module.scss\";\r\nimport Card from \"../UI_General/Card\";\r\nimport CartContext from \"../../cart-context/cart-context\";\r\nimport { useContext, useMemo } from \"react\";\r\n\r\n//implementez direct aici componenta ce-o voi folosi mai jos\r\nconst DropdownCartItem = (props) => {\r\n  const { name, price, amount } = props.item;\r\n\r\n  return (\r\n    <li className={classes[\"dropdown-cart__item\"]}>\r\n      <span className={classes[\"dropdown-cart__item__name\"]}>{name}</span>\r\n      <div>\r\n        <span className={classes[\"dropdown-cart__item__amount\"]}>\r\n          x{amount}\r\n        </span>\r\n        <span className={classes[\"dropdown-cart__item__price\"]}>\r\n          ${(price * amount).toFixed(2)}\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst HoverCart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const { items, totalAmount } = cartCtx;\r\n\r\n  //variabila in care pun toate elementele cu articolele\r\n  const cartItems = items.map((item) => (\r\n    <DropdownCartItem key={item.id} item={item} />\r\n  ));\r\n\r\n  //am lasat useMemo aici cu toate ca este inutil din cauza ca aceasta componenta tot timpul se monteaza/demonteaza la hover pe HeaderCartButton\r\n  // const totalItems = useMemo(() => {\r\n  //   // pana si utilizarea useMemo foloseste performante asa ca voi comenta asta, dar las sa se vada\r\n  //   console.log(\"Inside useMemo 🢣 DropdownCart\"); // de aceea la demontare nu apare\r\n  //   return items.reduce((total, item) => (total += item.amount), 0);\r\n  // }, [items]);\r\n  const totalItems = items.reduce((total, item) => (total += item.amount), 0);\r\n\r\n  console.log(\"In dropdown cart\");\r\n\r\n  return (\r\n    <Card className={classes[\"dropdown-cart\"]}>\r\n      <ul className={classes[\"dropdown-cart__content\"]}>{cartItems}</ul>\r\n      <div className={classes[\"dropdown-cart__total\"]}>\r\n        <span className={classes[\"dropdown-cart__total__total\"]}>Total</span>\r\n        <span className={classes[\"dropdown-cart__total__amount\"]}>\r\n          {totalItems} meals\r\n        </span>\r\n        <span className={classes[\"dropdown-cart__total__price\"]}>\r\n          ${totalAmount.toFixed(2)}\r\n        </span>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HoverCart;\r\n","import CartIcon from \"../Cart/CartIcon\";\r\nimport DropdownCart from \"../Cart/DropdownCart\";\r\nimport classes from \"./HeaderCartButton.module.scss\";\r\nimport CartContext from \"../../cart-context/cart-context\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nconst CartButton = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  //am nevoie de o variabila de stare pt adaugarea/inlaturarea clasei 'bump' pt efect: altfel nu se actualizeaza clasa butonului\r\n  const [activateBumpEffect, setActiveBumpEffect] = useState(false); // 🢣 pt a reevalua si reranda clasele butonului\r\n  //stare pt reevaluarea codului si rerandarea componentei de hover\r\n  const [showHoverCart, setShowHoverCart] = useState(false);\r\n\r\n  //variabila in care retin totalitatea articolelor(nu le pun in functie de lungimea listei cu articole pt ca\r\n  // voi grupa articolele de acelasi tip)\r\n  const totalItems = cartCtx.items.reduce(\r\n    (total, item) => (total += item.amount),\r\n    0\r\n  ); // ⇧ 🢣 pt ca folosesc contextul cu starea din acesta, la orice schimbare a acesteia se va declansa o re-evaluare si a\r\n  //       acestei componente\r\n\r\n  let btnClasses = `${classes.button} ${\r\n    activateBumpEffect ? classes.bump : \"\"\r\n  }`;\r\n\r\n  //Folosesc useEffect pt ca vreau sa adaug/inlatur clasa dupa ce am adaugat articole si 'totalItems' s-a modificat + ca vreau sa se execute codul doar\r\n  //cand se adauga/inlatura articole(dependenta)\r\n  useEffect(() => {\r\n    //conditie pt a aplica efectul doar daca lista nu este goala\r\n    if (cartCtx.items.length === 0) {\r\n      return; // initial voiam sa aplic varianta cu > 0 sa schimbe starea 🢣  actualizarea claselor 🢣 aplicarea efectului\r\n    }\r\n    // 🢣 starea ce adauga clasa 'bump'\r\n    setActiveBumpEffect(true);\r\n    // 🢣 inlatur clasa(logica in btnClasses) schimband starea\r\n    const timerID = setTimeout(() => {\r\n      setActiveBumpEffect(false);\r\n    }, 300);\r\n    return () => {\r\n      clearTimeout(timerID);\r\n    };\r\n  }, [cartCtx.items]);\r\n\r\n  //Aici vreau sa adaug/inlatur componenta de hover pe buton 🢣 un fel de mini cos de cumparaturi\r\n  const onHoverInHandler = () => {\r\n    setShowHoverCart(true);\r\n  };\r\n  const onHoverOutHandler = () => {\r\n    setShowHoverCart(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={btnClasses}\r\n        onClick={props.onClick}\r\n        onMouseEnter={onHoverInHandler}\r\n        onMouseLeave={onHoverOutHandler}\r\n      >\r\n        <span className={classes[\"cart-icon\"]}>\r\n          <CartIcon />\r\n        </span>\r\n        <span className={classes[\"cart-text\"]}>Meals Cart</span>\r\n        <span className={classes[\"cart-badge\"]}>{totalItems}</span>\r\n        {showHoverCart && <DropdownCart />}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartButton;\r\n","export default __webpack_public_path__ + \"static/media/meal-table.21edbc87.jpg\";","import Navigation from \"./Navigation\";\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\nimport mealsImage from \"../assets/meal-table.jpg\";\r\nimport classes from \"./Header.module.scss\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <nav className={classes.navbar}>\r\n        <div className={classes.logo}>\r\n          <h1>\r\n            Foodi<span className={classes.logo__E}>E</span>\r\n          </h1>\r\n        </div>\r\n        <Navigation />\r\n        <HeaderCartButton onClick={props.onShowCart} />\r\n      </nav>\r\n      <div className={classes[\"header-image\"]}>\r\n        <img src={mealsImage} alt=\"Delicious food on a table\" />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Card from \"../UI_General/Card\";\r\nimport classes from \"./MealsDescription.module.scss\";\r\n\r\nconst MealsDescription = () => {\r\n  console.log(\"In Meals Description\");\r\n\r\n  return (\r\n    <section>\r\n      <Card className={classes.description}>\r\n        <h2>Delicious Food, Delivered To You</h2>\r\n        <p>\r\n          Choose your favorite meal from our broad selection of available meals\r\n          and enjoy a delicious lunch or dinner at home.\r\n        </p>\r\n        <p>\r\n          All our meals are cooked with high-quality ingredients, just-in-time\r\n          and of course by experienced chefs!\r\n        </p>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsDescription;\r\n","import React from \"react\";\r\n\r\n//folosesc React.forwardRef pt a face legatura intre ref de pe componenta Input si elementul din aceasta pt a prelua valoarea\r\nconst Input = React.forwardRef((props, ref) => {\r\n  // const options = ['cats', 'dogs', 'hamsters', 'snakes']; // 🢣 example of array with options\r\n\r\n  return (\r\n    //   .input-action stylings are in MealItemForm.scss\r\n    <div className=\"input-action\">\r\n      <label htmlFor={props.inputs.id}>{props.label}</label>\r\n      {props.inputType === \"input\" && <input {...props.inputs} ref={ref} />}\r\n      {props.inputType === \"select\" && (\r\n        <select {...props.inputs}>\r\n          {\" \"}\r\n          {props.options.map((option) => (\r\n            <option value={option}>{option}</option>\r\n          ))}\r\n        </select>\r\n      )}\r\n      {props.inputType === \"textarea\" && (\r\n        <textarea {...props.inputs}>{props.children}</textarea>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\n// 🢣 pentru a adauga proprietati implicite 🢣 🢣 in cazul in care nu specific\r\nInput.defaultProps = {\r\n  inputType: \"input\",\r\n}; // inpuType ⇨ 'input/select/textarea'\r\n\r\nexport default Input;\r\n","import Input from \"../../UI_General/Input\";\r\nimport \"./MealItemForm.scss\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst MealForm = (props) => {\r\n  //adaug o stare pt a adauga validitate(daca nu este valid se modifica starea 🢣 rerandare si adaugarea mesajului la invaliditate)\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n  //folosesc referinta pe elem input din componenta Input 🢣 preiau valoarea\r\n  const inputRef = useRef();\r\n\r\n  const addHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredAmount = inputRef.current.value;\r\n    const enteredAmountNumber = +enteredAmount; // 🢣 pt a-l converti la tipul 'number'\r\n\r\n    //adaug validare si o stare pt a gestiona limitele 🢣 verificarea o fac pe string-ul introdus\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n\r\n    //trimit datele catre componenta parinte pt ca am nevoie de mai multe date pt a trimite obiectul catre cosul de cumparaturi\r\n    props.onAddAmount(enteredAmountNumber); // 🢣 trimit data ca 'number'\r\n    //am pus-o in conditie pt a nu declansa o modificare a starii de fiecare data.\r\n    !amountIsValid && setAmountIsValid(true);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addHandler} className=\"meal-form\">\r\n      <Input\r\n        ref={inputRef}\r\n        label=\"Amount\"\r\n        inputs={{\r\n          id: \"amount_\" + props.id,\r\n          type: \"number\",\r\n          defaultValue: \"1\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n        }}\r\n      />\r\n      <button>+ Add</button>\r\n      {!amountIsValid && (\r\n        <p className=\"invalid\">Please enter a valid amount between 1 and 5!</p>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealForm;\r\n","import MealItemForm from \"./MealItemForm\";\r\nimport classes from \"./MealItem.module.scss\";\r\nimport CartContext from \"../../../cart-context/cart-context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst MealItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  // destructurez proprietatile pt a-mi fi mai usor\r\n  const { id, name, description, price } = props.meal;\r\n\r\n  // ⇨ formatting price\r\n  const priceF = `$${price.toFixed(2)}`;\r\n\r\n  // probabil ca aici o sa prelucrez articolul si o sa-l adaug in cosul de cumparaturi ... aici preiau cantitatea din formular\r\n  const addAmountHandler = (amount) => {\r\n    cartCtx.addItem({\r\n      id: id,\r\n      name: name,\r\n      price: price,\r\n      amount: amount,\r\n    });\r\n  };\r\n\r\n  console.log(\"In Meal Item\");\r\n\r\n  return (\r\n    <li className={classes.meal}>\r\n      <div>\r\n        <h3>{name}</h3>\r\n        <p className={classes[\"meal-description\"]}>{description}</p>\r\n        {/* <span>${props.meal.price.toFixed(2)}</span> */}\r\n        <p className={classes[\"meal-price\"]}>{priceF}</p>\r\n      </div>\r\n      <div>\r\n        <MealItemForm id={id} onAddAmount={addAmountHandler} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(async (configRequest, shapeData) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const response = await fetch(configRequest.url, {\r\n        method: configRequest.method ? configRequest.method : \"GET\",\r\n        headers: configRequest.headers ? configRequest.headers : {},\r\n        body: configRequest.body ? configRequest.body : null,\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      shapeData(data);\r\n    } catch (error) {\r\n      setError(`Sending post request error: ${error.message}`);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest };\r\n};\r\n\r\nexport default useHttp;\r\n","// import React from \"react\";\r\nimport Card from \"../UI_General/Card\";\r\nimport MealItem from \"../Meals/MealItem/MealItem\";\r\nimport classes from \"./MealsAvailability.module.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useHttp from \"../../hooks/fetch-hook\";\r\n\r\n// Aici am lista cu mancarurile disponibile\r\nconst MealsAvailability = (props) => {\r\n  // 🢣 I will split this into another component: MealItem ⇨ MealItemForm\r\n\r\n  const [fetchedMeals, setFetchedMeals] = useState([]);\r\n  //adaug si stari pt gestionarea incarcarii si erorilor\r\n  // const [isLoading, setIsLoading] = useState(true); // tinand cont ca eu incarc lista o singura data ⇦ true\r\n  // const [error, setError] = useState(null);\r\n  // preiau datele de pe server 🢣 functia pe care o chemi in useEffect nu ar trebui sa intoarca o promisiune ...varianta\r\n  //                                    🢣 declar o alta functie pe care o si apelez in useEFfect sau folosesc .then\r\n\r\n  // **** modificare useHttp hook ****\r\n  const { isLoading, error, sendRequest: fetchMeals } = useHttp();\r\n  useEffect(() => {\r\n    // const fetchMeals = async () => {\r\n    //   const response = await fetch(\r\n    //     \"https://react-http-tests-default-rtdb.europe-west1.firebasedatabase.app/meals.json\"\r\n    //   );\r\n    //   if (!response.ok) {\r\n    //     throw new Error(\"Something went wrong!\");\r\n    //   }\r\n    //   const data = await response.json();\r\n\r\n    //   const loadedMeals = [];\r\n    //   for (let key in data) {\r\n    //     loadedMeals.push({ id: key, ...data[key] });\r\n    //   }\r\n    //   //actualizez starea cu lista preluata\r\n    //   setFetchedMeals(loadedMeals);\r\n\r\n    //   setIsLoading(false);\r\n    // };\r\n    // //execut functia declarata 🢣 pt ca am folosit async-await aici\r\n    // // try {\r\n    // //   //ceva de notat: daca arunci o eroare intr-o promisiune(fetch) va cauza ca acea promisiune sa fie respinsa(rejected) - va trebui sa folosim\r\n    // //   //              await fetchMeals() --doar ca trebuie sa tin cont de async in useEffect (not required) si sa fac o alta functie in care sa pun asta\r\n    // //                                                          // ori .catch ca mai jos\r\n    // //   fetchMeals();\r\n    // // } catch (err) {\r\n    // //   console.log(\"Eroare \", err.message);\r\n    // //   setError(err.message);\r\n    // //   setIsLoading(false);\r\n    // // }\r\n    // fetchMeals().catch((err) => {\r\n    //   console.log(\"Eroare \", err.message);\r\n    //   setError(err.message);\r\n    //   setIsLoading(false);\r\n    // });\r\n\r\n    // *********************************************** modificare 🢣 implementare fetch-hook\r\n    const addFetchedMeals = (data) => {\r\n      const loadedMeals = [];\r\n      for (let key in data) {\r\n        loadedMeals.push({ id: key, ...data[key] });\r\n      }\r\n      //actualizez starea cu lista preluata\r\n      setFetchedMeals(loadedMeals);\r\n    };\r\n\r\n    const configRequest = {\r\n      url: \"https://react-http-tests-default-rtdb.europe-west1.firebasedatabase.app/meals.json\",\r\n    };\r\n\r\n    fetchMeals(configRequest, addFetchedMeals);\r\n  }, [fetchMeals]); //🢢 dependenta - useCallback in hook\r\n\r\n  //logica pt gestionarea incarcarii\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.loading}>\r\n        <Card>Loading...</Card>\r\n      </section>\r\n    );\r\n  }\r\n  //logica pt gestionarea erorii\r\n  if (error) {\r\n    return (\r\n      <section className={classes.error}>\r\n        <Card>{error}</Card>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const meals = (\r\n    <ul>\r\n      {fetchedMeals.map((meal) => (\r\n        <MealItem key={meal.id} meal={meal} />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <section>\r\n      <Card className={classes.meals}>{meals}</Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsAvailability;\r\n","import MealsDescription from \"./MealsDescription\"; // 🢣 meals summary\r\nimport AllMeals from \"./MealsAvailability\"; // 🢣 list with meals to pick from\r\nimport React from \"react\";\r\n\r\n// 🢣 central component for main app: combines all meal related components\r\n// Componenta in care le combin pe celelalte doua\r\nconst Meals = () => {\r\n  console.log(\"In Meals \");\r\n  return (\r\n    <>\r\n      <MealsDescription />\r\n      <AllMeals />\r\n    </>\r\n  );\r\n};\r\n\r\n// folosind React.memo() aici nu mai este nevoie sa o folosesc in componentele copil 🢣 pt ca se opreste reevaluarea aici(nu am stari, props\r\n// sau context folosite in acelea)\r\nexport default React.memo(Meals);\r\n","import classes from \"./Modal.module.scss\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Card from \"./Card\";\r\n\r\n// Voi folosi React.createPortal pt a muta modalul in care am articolele din cosul de cumparaturi\r\n\r\n// daca vreau sa inchid ceva cand dau click pe backdrop si folosesc 'context' pt a transmite functia ce face asta 🢣 NU mai este reutilizabil\r\n// ...asa, trimitand functia din componenta in componenta il pot reutiliza si in alta parte(cu alta functie)\r\nconst Backdrop = (props) => (\r\n  <div className={classes.backdrop} onClick={props.onClick}></div>\r\n);\r\n\r\nconst ModalOverlay = (props) => (\r\n  <Card className={classes.modal}>\r\n    <div className={classes.content}>{props.children}</div>\r\n  </Card>\r\n);\r\n\r\n// 🢣 Modalul ce-mi va infasura elementele din componenta Cart 🢣 componenta generala\r\nconst Modal = (props) => {\r\n  const cartModal = document.getElementById(\"overlays\");\r\n\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(<Backdrop onClick={props.onClick} />, cartModal)}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        cartModal\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import classes from \"./CartItem.module.scss\";\r\n\r\nconst CartItem = (props) => {\r\n  const fixedPrice = `$${props.item.price.toFixed(2)}`;\r\n\r\n  return (\r\n    <li className={classes[\"cart-item\"]}>\r\n      <div>\r\n        <h2>{props.item.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{fixedPrice}</span>\r\n          <span className={classes.amount}>x {props.item.amount}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        {/* <button onClick={() => cartCtx.removeItem(props.item.id)}> 🢣 daca foloseam contextul aici*/}\r\n        <button onClick={props.onRemove}>&#8722;</button>\r\n        <button onClick={props.onAdd}>&#43;</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import { useReducer } from \"react\";\r\n\r\nconst initialState = { value: \"\", isTouched: false };\r\n\r\nconst reducerFN = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT\":\r\n      return { value: action.value, isTouched: state.isTouched };\r\n    case \"BLUR\":\r\n      return { value: state.value, isTouched: true };\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nconst useInput = (validateInput) => {\r\n  const [inputState, dispatch] = useReducer(reducerFN, initialState);\r\n\r\n  const isValid = validateInput(inputState.value);\r\n  const hasError = !isValid && inputState.isTouched;\r\n\r\n  const inputChangeHandler = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    dispatch({ type: \"BLUR\" });\r\n  };\r\n\r\n  return {\r\n    value: inputState.value,\r\n    isValid,\r\n    hasError,\r\n    inputChangeHandler,\r\n    inputBlurHandler,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import classes from \"./Checkout.module.scss\";\r\nimport useInput from \"../../hooks/input-hook\";\r\n\r\nconst isNotEmpty = (value) => value.trim() !== \"\";\r\nconst isFiveChars = (value) => value.trim().length >= 5;\r\n\r\nconst Checkout = (props) => {\r\n  const {\r\n    value: name,\r\n    isValid: nameIsValid,\r\n    hasError: nameHasError,\r\n    inputChangeHandler: nameInputChangeHandler,\r\n    inputBlurHandler: nameInputBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n  const {\r\n    value: street,\r\n    isValid: streetIsValid,\r\n    hasError: streetHasError,\r\n    inputChangeHandler: streetInputChangeHandler,\r\n    inputBlurHandler: streetInputBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n  const {\r\n    value: postalCode,\r\n    isValid: postalCodeIsValid,\r\n    hasError: postalCodeHasError,\r\n    inputChangeHandler: postalCodeInputChangeHandler,\r\n    inputBlurHandler: postalCodeInputBlurHandler,\r\n  } = useInput(isFiveChars);\r\n  const {\r\n    value: city,\r\n    isValid: cityIsValid,\r\n    hasError: cityHasError,\r\n    inputChangeHandler: cityInputChangeHandler,\r\n    inputBlurHandler: cityInputBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n\r\n  let formIsValid = false;\r\n  if (nameIsValid && streetIsValid && postalCodeIsValid && cityIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    const userOrderDetails = { name, street, city, postalCode };\r\n    props.sentData(userOrderDetails);\r\n  };\r\n\r\n  const nameClasses = nameHasError\r\n    ? `${classes.control} ${classes.invalid}`\r\n    : `${classes.control}`;\r\n  const streetClasses = streetHasError\r\n    ? `${classes.control} ${classes.invalid}`\r\n    : `${classes.control}`;\r\n  const postalClasses = postalCodeHasError\r\n    ? `${classes.control} ${classes.invalid}`\r\n    : `${classes.control}`;\r\n  const cityClasses = cityHasError\r\n    ? `${classes.control} ${classes.invalid}`\r\n    : `${classes.control}`;\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} className={classes.form}>\r\n      <div className={classes.controls}>\r\n        <div className={nameClasses}>\r\n          <label htmlFor=\"name\">Your name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            onChange={nameInputChangeHandler}\r\n            onBlur={nameInputBlurHandler}\r\n            value={name}\r\n          />\r\n          {nameHasError && <p>Please enter a valid name!</p>}\r\n        </div>\r\n        <div className={streetClasses}>\r\n          <label htmlFor=\"street\">Street</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"street\"\r\n            onChange={streetInputChangeHandler}\r\n            onBlur={streetInputBlurHandler}\r\n            value={street}\r\n          />\r\n          {streetHasError && <p>Please enter a valid street!</p>}\r\n        </div>\r\n        <div className={postalClasses}>\r\n          <label htmlFor=\"postal\">Postal code</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"postal\"\r\n            onChange={postalCodeInputChangeHandler}\r\n            onBlur={postalCodeInputBlurHandler}\r\n            value={postalCode}\r\n          />\r\n          {postalCodeHasError && <p>Please enter a valid postal code >=5 !</p>}\r\n        </div>\r\n        <div className={cityClasses}>\r\n          <label htmlFor=\"city\">City</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"city\"\r\n            onChange={cityInputChangeHandler}\r\n            onBlur={cityInputBlurHandler}\r\n            value={city}\r\n          />\r\n          {cityHasError && <p>Please enter a valid city!</p>}\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCloseCart}>\r\n          Cancel\r\n        </button>\r\n        <button disabled={!formIsValid}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import classes from \"./Cart.module.scss\";\r\nimport Modal from \"../UI_General/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport CartContext from \"../../cart-context/cart-context\";\r\nimport Checkout from \"./Checkout\";\r\nimport { useContext, useState } from \"react\";\r\nimport useHttp from \"../../hooks/fetch-hook\";\r\n\r\nconst Cart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  //pt afisarea formularului de completare cu datele utilizatorului\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n\r\n  const {\r\n    isLoading: isSubmiting,\r\n    error: sendError,\r\n    sendRequest: sendOrder,\r\n  } = useHttp();\r\n\r\n  //pentru a adauga/inlatura un element pot aplica mai multe variante: pot implementa contextul direct in comp CartItem si realizez acolo conexiunile\r\n  // 🢣 sau implementez logica aici pt ca deja am contextul aplicat aici si doar transmit functiile ca si atribute\r\n  const onAddItemHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 }); // 🢣 suprascriu amount pt a adauga cate un articol\r\n    //                                      altfel imi adauga tot cate erau din acest item(depinde de cat am adaugat din lista initiala)\r\n  };\r\n  const onRemoveItemHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const SubmitOrderHandler = async (data) => {\r\n    const configRequest = {\r\n      url: \"https://react-http-tests-default-rtdb.europe-west1.firebasedatabase.app/orders.json\",\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user: data,\r\n        orderedItems: cartCtx.items,\r\n        totalPrice: cartCtx.totalAmount,\r\n      }),\r\n    };\r\n\r\n    //solicitarea pt a posta datele - functia este definita direct aici.\r\n    sendOrder(configRequest, (data) => {\r\n      console.log(data);\r\n      cartCtx.clearCart();\r\n      setDidSubmit(true);\r\n    });\r\n  };\r\n\r\n  //voi avea o lista cu produse -> va fi pe o stare pt ca va trebui sa declanseze o re-evaluare a componentelor\r\n  const cartItems = cartCtx.items.map((item) => (\r\n    <CartItem\r\n      key={item.id}\r\n      item={item}\r\n      onAdd={onAddItemHandler.bind(null, item)}\r\n      // 🢣 .bind() pt a pasa acest argument functiei fara a o executa:  o alta varianta ar fi: 🢣🢣🢣\r\n      // onAdd={() => onAddItemHandler(item)}\r\n      onRemove={onRemoveItemHandler.bind(null, item.id)} // {cartCtx.removeItem.bind(null, item.id)} 🢣 varianta\r\n    />\r\n  ));\r\n\r\n  // 🢣 pt ca folosesc contextul aici si orice modificare in acesta duce la re-evaluarea acestei componente nu mai este nevoie sa definesc o stare\r\n  //    separat doar pt a afisa sau nu acest buton\r\n  const showOrder = cartCtx.items.length > 0;\r\n\r\n  const actionButtons = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button__alt\"]} onClick={props.onHideCart}>\r\n        Close\r\n      </button>\r\n      {showOrder && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  //am creat o variabila in care am continutul modalului pt a-l manipula\r\n  let modalContent = (\r\n    <>\r\n      {\" \"}\r\n      <ul className={classes[\"cart-items\"]}>{cartItems}</ul>\r\n      <div className={classes.total}>\r\n        <span>Total Amout</span>\r\n        <span>${cartCtx.totalAmount.toFixed(2)}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout\r\n          onCloseCart={props.onHideCart}\r\n          sentData={SubmitOrderHandler}\r\n        />\r\n      )}\r\n      {!isCheckout && actionButtons}\r\n    </>\r\n  );\r\n\r\n  //cat timp se incarca sa apara acest text\r\n  if (isSubmiting) {\r\n    modalContent = <p className={classes.sending}>Sending order...</p>;\r\n  }\r\n  //pt o eventuala eroare\r\n  if (sendError) {\r\n    modalContent = (\r\n      <div className={classes.actions}>\r\n        <p className={classes.error}>{sendError}</p>\r\n        <button className={classes.button} onClick={props.onHideCart}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  //cand s-a trimis solicitarea sa imi apara mesajul de confirmare\r\n  if (didSubmit) {\r\n    modalContent = (\r\n      <div className={classes.actions}>\r\n        <p className={classes.sending}>Successfully sent the order!</p>\r\n        <button className={classes.button} onClick={props.onHideCart}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <Modal onClick={props.onHideCart}>{modalContent}</Modal>;\r\n};\r\n\r\nexport default Cart;\r\n","import Header from \"./components/Layout/Header\";\r\nimport Meals from \"./components/Meals/Meals\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport { CartContextProvider } from \"./cart-context/cart-context\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  //implementez aceasta stare aici pt ca aici am aceasta componenta pe care o alternez on/off ⇨ Cart\r\n  //⇨ trimit mai departe functiile ce-mi alterneaza starea, in Header si Cart  ...as putea folosi si context dar nu voi avea modalul reutilizabil(pt ca acolo\r\n  //                                       olosesc functia de inchidere a modalului) ⇨⇨⇨ implementez context-ul in alta ramura din git 🢣 switch-modal-context\r\n  const [cartIsShown, setCartIsShown] = useState(false);\r\n\r\n  const showCartHandler = () => setCartIsShown(true);\r\n  const hideCartHandler = () => setCartIsShown(false);\r\n\r\n  return (\r\n    <CartContextProvider>\r\n      {cartIsShown && <Cart onHideCart={hideCartHandler} />}{\" \"}\r\n      {/* o pot pune oriunde aici ⇨ React.createPortal */}\r\n      <Header onShowCart={showCartHandler} />\r\n      <main>\r\n        <Meals />\r\n      </main>\r\n    </CartContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}